{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "200126c8b2c1ebc0c182bd3444480d57",
    "packages": [
        {
            "name": "aura/sqlquery",
            "version": "2.7.1",
            "source": {
                "type": "git",
                "url": "https://github.com/auraphp/Aura.SqlQuery.git",
                "reference": "dd81b57aeb43628180a9c70a4df58d872024d7f2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/auraphp/Aura.SqlQuery/zipball/dd81b57aeb43628180a9c70a4df58d872024d7f2",
                "reference": "dd81b57aeb43628180a9c70a4df58d872024d7f2",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.9"
            },
            "suggest": {
                "aura/sql": "Provides an extension to the native PDO along with a profiler and connection locator. Use version 2.*."
            },
            "type": "library",
            "extra": {
                "aura": {
                    "type": "library"
                }
            },
            "autoload": {
                "psr-4": {
                    "Aura\\SqlQuery\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-2-Clause"
            ],
            "authors": [
                {
                    "name": "Aura.SqlQuery Contributors",
                    "homepage": "https://github.com/auraphp/Aura.SqlQuery/contributors"
                }
            ],
            "description": "Object-oriented query builders for MySQL, Postgres, SQLite, and SQLServer; can be used with any database connection library.",
            "homepage": "https://github.com/auraphp/Aura.SqlQuery",
            "keywords": [
                "database",
                "db",
                "delete",
                "dml",
                "insert",
                "mysql",
                "pdo",
                "pgsql",
                "postgres",
                "postgresql",
                "query",
                "select",
                "sql",
                "sql server",
                "sqlite",
                "sqlserver",
                "update"
            ],
            "time": "2016-10-03T20:34:56+00:00"
        },
        {
            "name": "jawira/case-converter",
            "version": "v3.4.2",
            "source": {
                "type": "git",
                "url": "https://github.com/jawira/case-converter.git",
                "reference": "b32f881bfe30141a82c3b2d6ee466a2f192c7776"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/jawira/case-converter/zipball/b32f881bfe30141a82c3b2d6ee466a2f192c7776",
                "reference": "b32f881bfe30141a82c3b2d6ee466a2f192c7776",
                "shasum": ""
            },
            "require": {
                "ext-mbstring": "*",
                "php": ">=7.1"
            },
            "suggest": {
                "pds/skeleton": "PHP Package Development Standards",
                "phing/phing": "PHP Build Tool"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Jawira\\CaseConverter\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jawira Portugal",
                    "email": "dev@tugal.be",
                    "homepage": "http://jawira.com/"
                }
            ],
            "description": "Convert strings between 13 naming conventions: Snake case, Camel case, Pascal case, Kebab case, Ada case, Train case, Cobol case, Macro case, Upper case, Lower case, Sentence case, Title case and Dot notation.",
            "homepage": "https://jawira.github.io/case-converter/",
            "keywords": [
                "Ada case",
                "Cobol case",
                "Macro case",
                "Train case",
                "camel case",
                "dot notation",
                "kebab case",
                "lower case",
                "pascal case",
                "sentence case",
                "snake case",
                "title case",
                "upper case"
            ],
            "support": {
                "issues": "https://github.com/jawira/case-converter/issues",
                "source": "https://github.com/jawira/case-converter/tree/v3.4.2"
            },
            "time": "2021-01-05T08:56:22+00:00"
        },
        {
            "name": "kristos80/opton",
            "version": "v1.1.2",
            "source": {
                "type": "git",
                "url": "https://github.com/kristos80/Opton.git",
                "reference": "5490f4c596b7e745a27f86c4ab31192b1b581dd2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/kristos80/Opton/zipball/5490f4c596b7e745a27f86c4ab31192b1b581dd2",
                "reference": "5490f4c596b7e745a27f86c4ab31192b1b581dd2",
                "shasum": ""
            },
            "require-dev": {
                "phpunit/phpunit": "^7"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Kristos80\\Opton\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Christos Athanasiadis",
                    "email": "christos.k.athanasiadis@gmail.com"
                }
            ],
            "description": "Easily get a value from an array or object without all of those unnecessary array_key_exists or isset controls",
            "time": "2020-03-16T14:49:09+00:00"
        }
    ],
    "packages-dev": [],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": [],
    "platform-dev": [],
    "plugin-api-version": "2.0.0"
}
